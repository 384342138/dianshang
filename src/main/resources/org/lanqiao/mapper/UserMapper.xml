<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.lanqiao.mapper.UserMapper" >
  <resultMap id="UserResultMap" type="org.lanqiao.entity.User" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="user_type" property="userType" jdbcType="VARCHAR" />
    <result column="user_pid" property="userPid" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="UserMapWithBLOBs" type="org.lanqiao.entity.User" extends="UserResultMap" >
    <result column="love" property="love" jdbcType="LONGVARBINARY" />
  </resultMap>

  <sql id="Base_Column_List">
    user_id, user_name, sex, birthday, phone, email, create_date, user_type, user_pid
  </sql>
  <sql id="Blob_Column_List">
    love
  </sql>

  <select id="selectUserName" resultType="java.lang.String" parameterType="java.lang.Integer" >
    select user_name from users where user_id = #{userId,jdbcType=INTEGER}
  </select>

  <!--    =======================================查询用户信息=============================================-->
  <select id="selectByPrimaryKey" resultMap="UserMapWithBLOBs" parameterType="java.lang.Integer">
    select
    <include refid="Base_Column_List"/>
    ,
    <include refid="Blob_Column_List"/>
    from user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <!--验证手机号-->
  <select id="selectByPhone" resultMap="UserResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from user
    where phone = #{account,jdbcType=VARCHAR}
  </select>


  <!--  =========================================删除用户============================================-->
  <!--根据主键删除用户-->
  <delete id="deleteUserById" parameterType="java.lang.Integer">
    delete from user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <!--根据手机号码删除用户-->
  <delete id="deleteUserByPhone" parameterType="java.lang.String">
        delete from user where phone = #{phone,jdbcType=VARCHAR}
    </delete>

  <!--======================================添加用户信息=======================================-->
  <insert id="insertUser" parameterType="org.lanqiao.entity.User">
    insert into user (user_name, sex,
      birthday, phone, email,
        user_type, user_pid,
      love)
    values (#{userName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR},
      #{birthday,jdbcType=DATE}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
        #{userType,jdbcType=VARCHAR}, #{userPid,jdbcType=VARCHAR},
      #{love,jdbcType=VARCHAR});
  </insert>

  <insert id="insertSelective" parameterType="org.lanqiao.entity.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="userPid != null">
        user_pid,
      </if>
      <if test="love != null">
        love,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userPid != null">
        #{userPid,jdbcType=VARCHAR},
      </if>
      <if test="love != null">
        #{love,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>


  <!--  =========================================修改用户信息===========================================-->


  <update id="updateByPrimaryKeySelective" parameterType="org.lanqiao.entity.User">
    update user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=VARCHAR},
      </if>
      <if test="userPid != null">
        user_pid = #{userPid,jdbcType=VARCHAR},
      </if>
      <if test="love != null">
        love = #{love,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>

  <update id="updateUser" parameterType="org.lanqiao.entity.User">
    update user
    set user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>